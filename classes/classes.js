/*
# Classes

Se voc√™ t√° pensando em aprender js, entender classes √© crucial.
 Elas s√£o como moldes para criar objetos mais organizados e reutiliz√°veis.
  Ent√£o, sem mais delongas, bora l√°! üöÄ

## **O que s√£o Classes?**

Classes, introduzidas no ES6, s√£o um recurso do JavaScript que facilita a
cria√ß√£o de objetos. Elas agem como um template ou um molde,
a partir do qual voc√™ pode criar novos objetos que seguem um padr√£o.

### **Criando uma Classe**
*/

class Pessoa {
    constructor(nome, idade) {
        this.nome = nome;
        this.idade = idade;
    }

    falar() {
        console.log('Exemplo n√∫mero 1: ' + ` Ol√° meu nome √© ${this.nome} e eu tenho ${this.idade} anos!`)
    }
}

/*
## **Criando Objetos a partir de Classes**

Para criar um objeto a partir de uma classe, usamos a palavra-chave **`new`**.
*/

let joao = new Pessoa('Jo√£o', 25);

joao.falar();

/*
## **Heran√ßa de Classes**

Uma das grandes vantagens das classes √© a habilidade de herdar propriedades e m√©todos de outras classes.

### **Exemplo de Heran√ßa**
*/

class Estudante extends Pessoa {
    constructor(nome, idade, curso, notas) {
        super(nome, idade);
        this.curso = curso;
        this.notas = notas;
    }

    estudar() {
        console.log(` E estou estudando ${this.curso}`)
    }

    
}

let Ana = new Estudante('Ana', 20, 'Medicina');

Ana.falar() + Ana.estudar() + Ana.calcularMedia()

/*
## **M√©todos Est√°ticos**

As classes tamb√©m podem ter m√©todos est√°ticos. Estes s√£o m√©todos que voc√™ pode chamar diretamente na classe, sem criar uma inst√¢ncia dela.

### **Exemplo de M√©todo Est√°tico**
*/

class Utilitario {
    static numeroAleatorio() {
        return Math.floor(Math.random() * 100);
    }
} 

console.log('Exemplo 2: ' + Utilitario.numeroAleatorio());


/*
## **Propriedades Privadas**

Com a introdu√ß√£o do ES2020, agora √© poss√≠vel definir propriedades privadas em classes, usando o **`#`**.
*/

class ContaBancaria {
    #saldo;

    constructor(saldoInicial) {
        this.#saldo = saldoInicial;
    }

    depositar(valor) {
        this.#saldo += valor;
    }

    getSaldo() {
        return this.#saldo
    }

}

let conta =  new ContaBancaria(1000);
conta.depositar(500)
console.log('Exemplo 3: ' + conta.getSaldo())

/* Exerc√≠cios*/

class Animal {
    constructor(nome, som) {
        this.nome = nome;
        this.som = som
    }
    falar() {
        console.log('Exerc√≠cio 1: ' + ` O ${this.nome}, ${this.som} `)
    }
}

let gato = new Animal('Cavalo', 'relincha');

gato.falar()


class Ve√≠culo {
    constructor(marca, modelo, velomax) {
        this.marca = marca;
        this.modelo = modelo;
        this.velomax = velomax;
    }

    descrever() {
        console.log(`Este ve√≠culo √© uma ${this.marca}, modelo: ${this.modelo} e sua velocidade √© de: ${this.velomax}`)
    }
}


let lambo = new Ve√≠culo('Lamborghini', 'Hurac√†n A', '325km/h');
lambo.descrever()